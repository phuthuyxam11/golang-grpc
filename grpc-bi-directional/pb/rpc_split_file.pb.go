// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: rpc_split_file.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SplitFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*SplitFileRequest_FileInfo
	//	*SplitFileRequest_Chunk
	Data isSplitFileRequest_Data `protobuf_oneof:"data"`
}

func (x *SplitFileRequest) Reset() {
	*x = SplitFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_split_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitFileRequest) ProtoMessage() {}

func (x *SplitFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_split_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitFileRequest.ProtoReflect.Descriptor instead.
func (*SplitFileRequest) Descriptor() ([]byte, []int) {
	return file_rpc_split_file_proto_rawDescGZIP(), []int{0}
}

func (m *SplitFileRequest) GetData() isSplitFileRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SplitFileRequest) GetFileInfo() *FileInfo {
	if x, ok := x.GetData().(*SplitFileRequest_FileInfo); ok {
		return x.FileInfo
	}
	return nil
}

func (x *SplitFileRequest) GetChunk() []byte {
	if x, ok := x.GetData().(*SplitFileRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isSplitFileRequest_Data interface {
	isSplitFileRequest_Data()
}

type SplitFileRequest_FileInfo struct {
	FileInfo *FileInfo `protobuf:"bytes,1,opt,name=fileInfo,proto3,oneof"`
}

type SplitFileRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*SplitFileRequest_FileInfo) isSplitFileRequest_Data() {}

func (*SplitFileRequest_Chunk) isSplitFileRequest_Data() {}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=filePath,proto3" json:"filePath,omitempty"`
	FileName string `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_split_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_split_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_rpc_split_file_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type SplitFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FilePath string `protobuf:"bytes,2,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Finish   bool   `protobuf:"varint,3,opt,name=finish,proto3" json:"finish,omitempty"`
}

func (x *SplitFileResponse) Reset() {
	*x = SplitFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_split_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitFileResponse) ProtoMessage() {}

func (x *SplitFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_split_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitFileResponse.ProtoReflect.Descriptor instead.
func (*SplitFileResponse) Descriptor() ([]byte, []int) {
	return file_rpc_split_file_proto_rawDescGZIP(), []int{2}
}

func (x *SplitFileResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SplitFileResponse) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SplitFileResponse) GetFinish() bool {
	if x != nil {
		return x.Finish
	}
	return false
}

var File_rpc_split_file_proto protoreflect.FileDescriptor

var file_rpc_split_file_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x5e, 0x0a, 0x10, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f,
	0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x42,
	0x18, 0x5a, 0x16, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x62, 0x69, 0x2e, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rpc_split_file_proto_rawDescOnce sync.Once
	file_rpc_split_file_proto_rawDescData = file_rpc_split_file_proto_rawDesc
)

func file_rpc_split_file_proto_rawDescGZIP() []byte {
	file_rpc_split_file_proto_rawDescOnce.Do(func() {
		file_rpc_split_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_split_file_proto_rawDescData)
	})
	return file_rpc_split_file_proto_rawDescData
}

var file_rpc_split_file_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_rpc_split_file_proto_goTypes = []interface{}{
	(*SplitFileRequest)(nil),  // 0: pb.SplitFileRequest
	(*FileInfo)(nil),          // 1: pb.FileInfo
	(*SplitFileResponse)(nil), // 2: pb.SplitFileResponse
}
var file_rpc_split_file_proto_depIdxs = []int32{
	1, // 0: pb.SplitFileRequest.fileInfo:type_name -> pb.FileInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_split_file_proto_init() }
func file_rpc_split_file_proto_init() {
	if File_rpc_split_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_split_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_split_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_split_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_split_file_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*SplitFileRequest_FileInfo)(nil),
		(*SplitFileRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_split_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rpc_split_file_proto_goTypes,
		DependencyIndexes: file_rpc_split_file_proto_depIdxs,
		MessageInfos:      file_rpc_split_file_proto_msgTypes,
	}.Build()
	File_rpc_split_file_proto = out.File
	file_rpc_split_file_proto_rawDesc = nil
	file_rpc_split_file_proto_goTypes = nil
	file_rpc_split_file_proto_depIdxs = nil
}
